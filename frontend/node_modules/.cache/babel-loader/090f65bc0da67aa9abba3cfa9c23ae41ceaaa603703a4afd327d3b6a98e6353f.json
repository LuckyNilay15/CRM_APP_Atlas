{"ast":null,"code":"var _jsxFileName = \"/Users/lucky/Desktop/project-root/frontend/src/components/AudienceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createAudience } from \"../services/audienceService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudienceForm = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [criteria, setCriteria] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await createAudience({\n        name,\n        criteria\n      });\n      alert(\"Audience created successfully!\");\n      setName(\"\");\n      setCriteria(\"\");\n    } catch (error) {\n      console.error(\"Error creating audience:\", error.message);\n      alert(\"Failed to create audience.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Audience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Audience Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Criteria (JSON)\",\n        value: criteria,\n        onChange: e => setCriteria(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Audience\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AudienceForm, \"HHlj0t5NEX00MnM3wS6PGVxT4ys=\");\n_c = AudienceForm;\nexport default AudienceForm;\nvar _c;\n$RefreshReg$(_c, \"AudienceForm\");","map":{"version":3,"names":["React","useState","createAudience","jsxDEV","_jsxDEV","AudienceForm","_s","name","setName","criteria","setCriteria","handleSubmit","e","preventDefault","response","alert","error","console","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/lucky/Desktop/project-root/frontend/src/components/AudienceForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createAudience } from \"../services/audienceService\";\n\nconst AudienceForm = () => {\n  const [name, setName] = useState(\"\");\n  const [criteria, setCriteria] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await createAudience({ name, criteria });\n      alert(\"Audience created successfully!\");\n      setName(\"\");\n      setCriteria(\"\");\n    } catch (error) {\n      console.error(\"Error creating audience:\", error.message);\n      alert(\"Failed to create audience.\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Create Audience</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Audience Name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          required\n        />\n      </div>\n      <div>\n        <textarea\n          placeholder=\"Criteria (JSON)\"\n          value={criteria}\n          onChange={(e) => setCriteria(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\">Create Audience</button>\n    </form>\n  );\n};\n\nexport default AudienceForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,cAAc,CAAC;QAAEK,IAAI;QAAEE;MAAS,CAAC,CAAC;MACzDM,KAAK,CAAC,gCAAgC,CAAC;MACvCP,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACE,OAAO,CAAC;MACxDH,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEX,OAAA;IAAMe,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BhB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAAgB,QAAA,eACEhB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,eAAe;QAC3BC,KAAK,EAAEpB,IAAK;QACZqB,QAAQ,EAAGhB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QACzCG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAAgB,QAAA,eACEhB,OAAA;QACEsB,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAElB,QAAS;QAChBmB,QAAQ,EAAGhB,CAAC,IAAKF,WAAW,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC7CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEX,CAAC;AAAClB,EAAA,CAxCID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}