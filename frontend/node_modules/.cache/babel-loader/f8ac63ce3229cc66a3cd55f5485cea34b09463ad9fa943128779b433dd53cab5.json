{"ast":null,"code":"var _jsxFileName = \"/Users/lucky/Desktop/project-root/frontend/src/components/CampaignForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchAudiences } from \"../services/audienceService\";\nimport { createCampaign } from \"../services/campaignService\";\nimport \"./styles/CampaignForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CampaignForm = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [messageTemplate, setMessageTemplate] = useState(\"\");\n  const [audiences, setAudiences] = useState([]);\n  const [selectedAudience, setSelectedAudience] = useState(\"\");\n  const [stats, setStats] = useState(null); // For displaying stats after message sending\n\n  // Load audience list\n  useEffect(() => {\n    const loadAudiences = async () => {\n      try {\n        const response = await fetchAudiences();\n        setAudiences(response);\n      } catch (error) {\n        console.error(\"Failed to fetch audiences:\", error.message);\n      }\n    };\n    loadAudiences();\n  }, []);\n\n  // Submit the campaign and send messages\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await createCampaign({\n        name,\n        audience_id: selectedAudience,\n        message_template: messageTemplate\n      });\n      // Extract stats from the response\n      setStats(response.stats);\n      alert(\"Campaign created and messages sent successfully!\");\n\n      // Reset form fields\n      setName(\"\");\n      setMessageTemplate(\"\");\n      setSelectedAudience(\"\");\n    } catch (error) {\n      console.error(\"Error creating campaign or sending messages:\", error.message);\n      alert(\"Failed to create campaign or send messages.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"campaign-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Campaign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"campaign-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"campaignName\",\n          children: \"Campaign Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"campaignName\",\n          placeholder: \"Enter campaign name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"messageTemplate\",\n          children: \"Message Template:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"messageTemplate\",\n          placeholder: \"Enter your message template. Use [Name] to personalize.\",\n          value: messageTemplate,\n          onChange: e => setMessageTemplate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"audienceSelect\",\n          children: \"Select Audience:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"audienceSelect\",\n          value: selectedAudience,\n          onChange: e => setSelectedAudience(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select an Audience --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), audiences.map(audience => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: audience._id,\n            children: [audience.name, \" (Size: \", audience.audience_size || 0, \")\"]\n          }, audience._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Create Campaign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), stats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"campaign-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Campaign Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Audience:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 14\n        }, this), \" \", stats.audience_size]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Sent:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 14\n        }, this), \" \", stats.total_sent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total Failed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }, this), \" \", stats.total_failed]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CampaignForm, \"f1G0tQ87JbItBMQ4pqTmtAzwn9Y=\");\n_c = CampaignForm;\nexport default CampaignForm;\nvar _c;\n$RefreshReg$(_c, \"CampaignForm\");","map":{"version":3,"names":["React","useState","useEffect","fetchAudiences","createCampaign","jsxDEV","_jsxDEV","CampaignForm","_s","name","setName","messageTemplate","setMessageTemplate","audiences","setAudiences","selectedAudience","setSelectedAudience","stats","setStats","loadAudiences","response","error","console","message","handleSubmit","e","preventDefault","audience_id","message_template","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","map","audience","_id","audience_size","total_sent","total_failed","_c","$RefreshReg$"],"sources":["/Users/lucky/Desktop/project-root/frontend/src/components/CampaignForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchAudiences } from \"../services/audienceService\";\nimport { createCampaign } from \"../services/campaignService\";\nimport \"./styles/CampaignForm.css\";\n\nconst CampaignForm = () => {\n  const [name, setName] = useState(\"\");\n  const [messageTemplate, setMessageTemplate] = useState(\"\");\n  const [audiences, setAudiences] = useState([]);\n  const [selectedAudience, setSelectedAudience] = useState(\"\");\n  const [stats, setStats] = useState(null); // For displaying stats after message sending\n\n  // Load audience list\n  useEffect(() => {\n    const loadAudiences = async () => {\n      try {\n        const response = await fetchAudiences();\n        setAudiences(response);\n      } catch (error) {\n        console.error(\"Failed to fetch audiences:\", error.message);\n      }\n    };\n    loadAudiences();\n  }, []);\n\n  // Submit the campaign and send messages\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await createCampaign({\n        name,\n        audience_id: selectedAudience,\n        message_template: messageTemplate,\n      });\n      // Extract stats from the response\n      setStats(response.stats);\n      alert(\"Campaign created and messages sent successfully!\");\n\n      // Reset form fields\n      setName(\"\");\n      setMessageTemplate(\"\");\n      setSelectedAudience(\"\");\n    } catch (error) {\n      console.error(\"Error creating campaign or sending messages:\", error.message);\n      alert(\"Failed to create campaign or send messages.\");\n    }\n  };\n\n  return (\n    <div className=\"campaign-form-container\">\n      <h1>Create Campaign</h1>\n      <form onSubmit={handleSubmit} className=\"campaign-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"campaignName\">Campaign Name:</label>\n          <input\n            type=\"text\"\n            id=\"campaignName\"\n            placeholder=\"Enter campaign name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"messageTemplate\">Message Template:</label>\n          <textarea\n            id=\"messageTemplate\"\n            placeholder=\"Enter your message template. Use [Name] to personalize.\"\n            value={messageTemplate}\n            onChange={(e) => setMessageTemplate(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"audienceSelect\">Select Audience:</label>\n          <select\n            id=\"audienceSelect\"\n            value={selectedAudience}\n            onChange={(e) => setSelectedAudience(e.target.value)}\n            required\n          >\n            <option value=\"\">-- Select an Audience --</option>\n            {audiences.map((audience) => (\n              <option key={audience._id} value={audience._id}>\n                {audience.name} (Size: {audience.audience_size || 0})\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">\n          Create Campaign\n        </button>\n      </form>\n\n      {/* Display campaign stats after creation */}\n      {stats && (\n        <div className=\"campaign-stats\">\n          <h2>Campaign Stats</h2>\n          <p><strong>Total Audience:</strong> {stats.audience_size}</p>\n          <p><strong>Total Sent:</strong> {stats.total_sent}</p>\n          <p><strong>Total Failed:</strong> {stats.total_failed}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CampaignForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}