{"ast":null,"code":"var _jsxFileName = \"/Users/lucky/Desktop/project-root/frontend/src/components/CommunicationLogs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchCommunicationLogs } from \"../services/communicationService\";\nimport \"./styles/CommunicationLogs.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommunicationLogs = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    const loadLogs = async () => {\n      try {\n        const data = await fetchCommunicationLogs();\n        setLogs(data.sort((a, b) => new Date(b.date) - new Date(a.date)));\n      } catch (error) {\n        console.error(\"Failed to load communication logs:\", error);\n      }\n    };\n    loadLogs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Communication Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Campaign Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Audience Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Delivery Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.campaign_name || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.audience_name || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.customer_name || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.delivery_status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: log.date ? new Date(log.date).toLocaleString() : \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, log._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunicationLogs, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = CommunicationLogs;\nexport default CommunicationLogs;\nvar _c;\n$RefreshReg$(_c, \"CommunicationLogs\");","map":{"version":3,"names":["React","useEffect","useState","fetchCommunicationLogs","jsxDEV","_jsxDEV","CommunicationLogs","_s","logs","setLogs","loadLogs","data","sort","a","b","Date","date","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","campaign_name","audience_name","customer_name","message","delivery_status","toLocaleString","_id","_c","$RefreshReg$"],"sources":["/Users/lucky/Desktop/project-root/frontend/src/components/CommunicationLogs.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchCommunicationLogs } from \"../services/communicationService\";\nimport \"./styles/CommunicationLogs.css\";\nconst CommunicationLogs = () => {\n  const [logs, setLogs] = useState([]);\n\n  useEffect(() => {\n    const loadLogs = async () => {\n      try {\n        const data = await fetchCommunicationLogs();\n        setLogs(data.sort((a, b) => new Date(b.date) - new Date(a.date)));\n      } catch (error) {\n        console.error(\"Failed to load communication logs:\", error);\n      }\n    };\n\n    loadLogs();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Communication Logs</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>Campaign Name</th>\n            <th>Audience Name</th>\n            <th>Customer Name</th>\n            <th>Message</th>\n            <th>Delivery Status</th>\n            <th>Date</th> \n          </tr>\n        </thead>\n        <tbody>\n          {logs.map((log) => (\n            <tr key={log._id}>\n              <td>{log.campaign_name || \"N/A\"}</td>\n              <td>{log.audience_name || \"N/A\"}</td>\n              <td>{log.customer_name || \"N/A\"}</td>\n              <td>{log.message}</td>\n              <td>{log.delivery_status}</td>\n              <td>{log.date ? new Date(log.date).toLocaleString() : \"N/A\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default CommunicationLogs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}