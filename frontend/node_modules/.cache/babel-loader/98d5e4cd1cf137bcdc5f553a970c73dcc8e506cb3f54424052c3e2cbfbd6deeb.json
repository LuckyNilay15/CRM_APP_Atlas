{"ast":null,"code":"var _jsxFileName = \"/Users/lucky/Desktop/project-root/frontend/src/components/AudienceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createAudience } from \"../services/audienceService\";\nimport \"./styles/AudienceForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudienceForm = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [criteria, setCriteria] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setError(\"\");\n      const parsedCriteria = JSON.parse(criteria); // Parse JSON string input\n      const response = await createAudience(name, parsedCriteria);\n      console.log(\"Audience Created:\", response);\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 3000);\n      setName(\"\");\n      setCriteria(\"\");\n    } catch (error) {\n      console.error(\"Error creating audience:\", error.message);\n      if (error instanceof SyntaxError) {\n        setError(\"Invalid JSON format. Please correct it and try again.\");\n      } else {\n        setError(\"Failed to create audience. Please try again.\");\n      }\n    }\n  };\n  const getThreeMonthsAgoDate = () => {\n    const now = new Date();\n    now.setMonth(now.getMonth() - 3);\n    return now.toISOString().split(\"T\")[0];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"audience-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Audience Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"criteria\",\n          children: \"Criteria (JSON):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"criteria\",\n          placeholder: `{\n  \"total_spending\": { \"$gt\": 10000 },\n  \"visits\": { \"$lte\": 5 },\n  \"last_visit\": { \"$lt\": \"${getThreeMonthsAgoDate()}\" }\n}`,\n          value: criteria,\n          onChange: e => setCriteria(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"criteria-helper\",\n          children: [\"Provide any one, two, or all of the criteria in JSON format. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 74\n          }, this), \"Example: Customers who spent more than \\u20B910,000, made 5 or fewer visits, or have not visited in the last 3 months (i.e., before \", getThreeMonthsAgoDate(), \").\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Audience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: \"Audience Created Successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AudienceForm, \"SoQDT/r7jspCnQMgHuWGMpQAX84=\");\n_c = AudienceForm;\nexport default AudienceForm;\nvar _c;\n$RefreshReg$(_c, \"AudienceForm\");","map":{"version":3,"names":["React","useState","createAudience","jsxDEV","_jsxDEV","AudienceForm","_s","name","setName","criteria","setCriteria","showPopup","setShowPopup","error","setError","handleSubmit","e","preventDefault","parsedCriteria","JSON","parse","response","console","log","setTimeout","message","SyntaxError","getThreeMonthsAgoDate","now","Date","setMonth","getMonth","toISOString","split","children","onSubmit","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["/Users/lucky/Desktop/project-root/frontend/src/components/AudienceForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createAudience } from \"../services/audienceService\";\nimport \"./styles/AudienceForm.css\";\n\nconst AudienceForm = () => {\n  const [name, setName] = useState(\"\");\n  const [criteria, setCriteria] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      setError(\"\");\n      const parsedCriteria = JSON.parse(criteria); // Parse JSON string input\n      const response = await createAudience(name, parsedCriteria);\n      console.log(\"Audience Created:\", response);\n\n      setShowPopup(true);\n      setTimeout(() => setShowPopup(false), 3000);\n      setName(\"\");\n      setCriteria(\"\");\n    } catch (error) {\n      console.error(\"Error creating audience:\", error.message);\n      if (error instanceof SyntaxError) {\n        setError(\"Invalid JSON format. Please correct it and try again.\");\n      } else {\n        setError(\"Failed to create audience. Please try again.\");\n      }\n    }\n  };\n\n  const getThreeMonthsAgoDate = () => {\n    const now = new Date();\n    now.setMonth(now.getMonth() - 3);\n    return now.toISOString().split(\"T\")[0];\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className=\"audience-form\">\n        <div>\n          <label htmlFor=\"name\">Audience Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label htmlFor=\"criteria\">Criteria (JSON):</label>\n          <textarea\n            id=\"criteria\"\n            placeholder={`{\n  \"total_spending\": { \"$gt\": 10000 },\n  \"visits\": { \"$lte\": 5 },\n  \"last_visit\": { \"$lt\": \"${getThreeMonthsAgoDate()}\" }\n}`}\n            value={criteria}\n            onChange={(e) => setCriteria(e.target.value)}\n            required\n          />\n          <p className=\"criteria-helper\">\n            Provide any one, two, or all of the criteria in JSON format. <br />\n            Example: Customers who spent more than â‚¹10,000, made 5 or fewer visits, or \n            have not visited in the last 3 months (i.e., before {getThreeMonthsAgoDate()}).\n          </p>\n        </div>\n        {error && <p className=\"error-message\">{error}</p>}\n        <button type=\"submit\">Create Audience</button>\n      </form>\n\n      {showPopup && (\n        <div className=\"popup\">\n          Audience Created Successfully!\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudienceForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,6BAA6B;AAC5D,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMc,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACFH,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAMI,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACX,QAAQ,CAAC,CAAC,CAAC;MAC7C,MAAMY,QAAQ,GAAG,MAAMnB,cAAc,CAACK,IAAI,EAAEW,cAAc,CAAC;MAC3DI,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;MAE1CT,YAAY,CAAC,IAAI,CAAC;MAClBY,UAAU,CAAC,MAAMZ,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;MAC3CJ,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdS,OAAO,CAACT,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACY,OAAO,CAAC;MACxD,IAAIZ,KAAK,YAAYa,WAAW,EAAE;QAChCZ,QAAQ,CAAC,uDAAuD,CAAC;MACnE,CAAC,MAAM;QACLA,QAAQ,CAAC,8CAA8C,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAMa,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtBD,GAAG,CAACE,QAAQ,CAACF,GAAG,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC,OAAOH,GAAG,CAACI,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;EAED,oBACE7B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAM+B,QAAQ,EAAEpB,YAAa;MAACqB,SAAS,EAAC,eAAe;MAAAF,QAAA,gBACrD9B,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAOiC,OAAO,EAAC,MAAM;UAAAH,QAAA,EAAC;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5CrC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,MAAM;UACTC,KAAK,EAAErC,IAAK;UACZsC,QAAQ,EAAG7B,CAAC,IAAKR,OAAO,CAACQ,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAOiC,OAAO,EAAC,UAAU;UAAAH,QAAA,EAAC;QAAgB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDrC,OAAA;UACEuC,EAAE,EAAC,UAAU;UACbK,WAAW,EAAE;AACzB;AACA;AACA,4BAA4BrB,qBAAqB,CAAC,CAAC;AACnD,EAAG;UACSiB,KAAK,EAAEnC,QAAS;UAChBoC,QAAQ,EAAG7B,CAAC,IAAKN,WAAW,CAACM,CAAC,CAAC8B,MAAM,CAACF,KAAK,CAAE;UAC7CG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFrC,OAAA;UAAGgC,SAAS,EAAC,iBAAiB;UAAAF,QAAA,GAAC,+DACgC,eAAA9B,OAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,wIAEf,EAACd,qBAAqB,CAAC,CAAC,EAAC,IAC/E;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACL5B,KAAK,iBAAIT,OAAA;QAAGgC,SAAS,EAAC,eAAe;QAAAF,QAAA,EAAErB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClDrC,OAAA;QAAQsC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EAEN9B,SAAS,iBACRP,OAAA;MAAKgC,SAAS,EAAC,OAAO;MAAAF,QAAA,EAAC;IAEvB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CA9EID,YAAY;AAAA4C,EAAA,GAAZ5C,YAAY;AAgFlB,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}